"use strict";(self.webpackChunkldo_docs=self.webpackChunkldo_docs||[]).push([[2087],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>b});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,b=u["".concat(i,".").concat(d)]||u[d]||m[d]||s;return t?r.createElement(b,o(o({ref:n},p),{},{components:t})):r.createElement(b,o({ref:n},p))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<s;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9082:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const s={sidebar_position:1},o="ELK Stack",l={unversionedId:"AnsibleRoles/ELK",id:"AnsibleRoles/ELK",title:"ELK Stack",description:"Few steps if elasticsearch that needs to be handled from UI to start the service, Following are the commands",source:"@site/docs/AnsibleRoles/01-ELK.md",sourceDirName:"AnsibleRoles",slug:"/AnsibleRoles/ELK",permalink:"/learndevopsonline/build/docs/AnsibleRoles/ELK",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/AnsibleRoles/01-ELK.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Ansible Roles",permalink:"/learndevopsonline/build/docs/category/ansible-roles"}},i={},c=[],p={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"elk-stack"},"ELK Stack"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ansible",metastring:"template title=templates/elastic.repo",template:!0,title:"templates/elastic.repo"},"[elasticsearch]\nname=Elasticsearch repository for 8.x packages\nbaseurl=https://artifacts.elastic.co/packages/8.x/yum\ngpgcheck=0\nenabled=1\nautorefresh=1\ntype=rpm-md\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ansible",metastring:"template title=templates/nginx.conf",template:!0,title:"templates/nginx.conf"},'user nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                      \'$status $body_bytes_sent "$http_referer" \'\n                      \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    include /etc/nginx/conf.d/*.conf;\n  ## Kibana Config\n  upstream kibana {\n    server 127.0.0.1:5601;\n    keepalive 15;\n  }\n\n  server {\n    listen 80;\n\n    location / {\n      proxy_pass http://kibana;\n      proxy_redirect off;\n      proxy_buffering off;\n\n      proxy_http_version 1.1;\n      proxy_set_header Connection "Keep-Alive";\n      proxy_set_header Proxy-Connection "Keep-Alive";\n    }\n\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ansible",metastring:"tasks title=roles/main.yml",tasks:!0,title:"roles/main.yml"},'- name: Set Prompt\n  ansible.builtin.shell: set-prompt {{ tool_name }}\n\n- name: Copy Elastic repo file\n  ansible.builtin.template:\n    src: elastic.repo\n    dest: /etc/yum.repos.d/elastic.repo\n\n- name: Install ELK\n  ansible.builtin.dnf:\n    name:\n      - elasticsearch\n      - kibana\n      - logstash\n      - nginx\n    state: installed\n\n- name: Copy nginx config file\n  ansible.builtin.template:\n    src: nginx.conf\n    dest: /etc/nginx/nginx.conf\n\n- name: Start ELK\n  ansible.builtin.systemd_service:\n    name: "{{ item }}"\n    state: restarted\n    enabled: yes\n  loop:\n    - elasticsearch\n    - kibana\n    - logstash\n    - nginx\n')),(0,a.kt)("p",null,"Few steps if elasticsearch that needs to be handled from UI to start the service, Following are the commands"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Generate an enrollment token for Kibana instance.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibana\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Kibana Verification")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/share/kibana/bin/kibana-verification-code\n")),(0,a.kt)("p",null,"3.Reset admin password"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic\n")))}u.isMDXComponent=!0}}]);